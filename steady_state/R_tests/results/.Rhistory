win_cen <- list()
for (t in seq(0,48000,by=1000)){
hi_sb <- hi[(1000+t):(1000+t+wl)];
#hi_sb <- rw[(1000):(t)];
#hi_sb <- ns[(1000):(t)];
#hi_sb <- hi[(49001-t):49001];
win_cen[[length(win_cen)+1]] = (2*t + wl)/2;
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
wl = 2000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
win_cen <- list()
for (t in seq(0,47000,by=1000)){  ## for use with wl=2000
hi_sb <- hi[(1000+t):(1000+t+wl)];
#hi_sb <- rw[(1000):(t)];
#hi_sb <- ns[(1000):(t)];
#hi_sb <- hi[(49001-t):49001];
win_cen[[length(win_cen)+1]] = (2*t + wl)/2;
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "stat_tests_v_time_hi_wl2000.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 10000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
win_cen <- list()
#for (t in seq(0,47000,by=1000)){  ## for use with wl=2000
for (t in seq(0,39000,by=1000)){  ## for use with wl=10000
hi_sb <- hi[(1000+t):(1000+t+wl)];
#hi_sb <- rw[(1000):(t)];
#hi_sb <- ns[(1000):(t)];
#hi_sb <- hi[(49001-t):49001];
win_cen[[length(win_cen)+1]] = (2*t + wl)/2;
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "stat_tests_v_time_hi_wl10000.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 25000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
win_cen <- list()
#for (t in seq(0,47000,by=1000)){  ## for use with wl=2000
#for (t in seq(0,39000,by=1000)){  ## for use with wl=10000
for (t in seq(0,24000,by=1000)){  ## for use with wl=25000
hi_sb <- hi[(1000+t):(1000+t+wl)];
#hi_sb <- rw[(1000):(t)];
#hi_sb <- ns[(1000):(t)];
#hi_sb <- hi[(49001-t):49001];
win_cen[[length(win_cen)+1]] = (2*t + wl)/2;
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "stat_tests_v_time_hi_wl25000.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 3000
#wl = 10000
#wl = 25000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
win_cen <- list()
#for (t in seq(0,47000,by=1000)){  ## for use with wl=2000
for (t in seq(0,46000,by=1000)){  ## for use with wl=3000
#for (t in seq(0,39000,by=1000)){  ## for use with wl=10000
#for (t in seq(0,24000,by=1000)){  ## for use with wl=25000
hi_sb <- hi[(1000+t):(1000+t+wl)];
#hi_sb <- rw[(1000):(t)];
#hi_sb <- ns[(1000):(t)];
#hi_sb <- hi[(49001-t):49001];
win_cen[[length(win_cen)+1]] = (2*t + wl)/2;
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(win_cen, adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "stat_tests_v_time_hi_wl3000.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
sp1 = output_pops_long$V20
sp1 = output_pops_long$V20########################################################################
sp1 = output_pops_long$V20
sp2 = output_pops_long$V6
sp3 = output_pops_long$V59
sp58 = output_pops_long$V2
sp59 = output_pops_long$V3
sp60 = output_pops_long$V58
write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp5_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
hi_sb <- sp1[(1000):(t)];
#hi_sb <- sp2[(1000):(t)];
#hi_sb <- sp3[(1000):(t)];
#hi_sb <- sp58[(1000):(t)];
#hi_sb <- sp59[(1000):(t)];
#hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
#hi_sb <- sp1[(1000):(t)];
hi_sb <- sp2[(1000):(t)];
#hi_sb <- sp3[(1000):(t)];
#hi_sb <- sp58[(1000):(t)];
#hi_sb <- sp59[(1000):(t)];
#hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
#write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp2_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
#hi_sb <- sp1[(1000):(t)];
#hi_sb <- sp2[(1000):(t)];
hi_sb <- sp3[(1000):(t)];
#hi_sb <- sp58[(1000):(t)];
#hi_sb <- sp59[(1000):(t)];
#hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
#write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp2_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp3_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
#hi_sb <- sp1[(1000):(t)];
#hi_sb <- sp2[(1000):(t)];
#hi_sb <- sp3[(1000):(t)];
hi_sb <- sp58[(1000):(t)];
#hi_sb <- sp59[(1000):(t)];
#hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
#write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp2_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp3_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp58_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
#hi_sb <- sp1[(1000):(t)];
#hi_sb <- sp2[(1000):(t)];
#hi_sb <- sp3[(1000):(t)];
#hi_sb <- sp58[(1000):(t)];
hi_sb <- sp59[(1000):(t)];
#hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
#write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp2_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp3_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp58_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp59_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp60_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
#hi_sb <- sp1[(1000):(t)];
#hi_sb <- sp2[(1000):(t)];
#hi_sb <- sp3[(1000):(t)];
#hi_sb <- sp58[(1000):(t)];
#hi_sb <- sp59[(1000):(t)];
hi_sb <- sp60[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
#write.table(output, file = "sp1_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp2_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp3_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp58_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
#write.table(output, file = "sp59_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(output, file = "sp60_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
par(mfrow=c(2,1))
plot(1:length(sp1), sp1, type="n")
lines(1:length(sp1), sp1)
plot(1:length(sp2), sp2, type="n")
lines(1:length(sp2), sp2)
par(mfrow=c(2,1))
plot(1:length(sp1[st:en]), sp1[st:en], type="n")
lines(1:length(sp1[st:en]), sp1[st:en])
plot(1:length(sp2[st:en]), sp2[st:en], type="n")
lines(1:length(sp2[st:en]), sp2[st:en])
st=0
en=10000
par(mfrow=c(2,1))
plot(1:length(sp1[st:en]), sp1[st:en], type="n")
lines(1:length(sp1[st:en]), sp1[st:en])
plot(1:length(sp2[st:en]), sp2[st:en], type="n")
lines(1:length(sp2[st:en]), sp2[st:en])
species <- read.csv("~/Documents/phd files/habitat_loss_project/python_analysis_scripts/steady_state/test_files/highIM/output_species_long.csv", header=F)
species
names(species)
species <- read.csv("~/Documents/phd files/habitat_loss_project/python_analysis_scripts/steady_state/test_files/highIM/output_species_long.csv", header=T)
names(species)
species$species
names(species)
species$init_tl
species$species
for (i in seq(1,60)){
print i
}
for (i in seq(1,60)){
print(i)
}
paste('V',i)
paste('V',i, sep='')
output_pops_long$paste('V',i, sep='')
output_pops_long$(paste('V',i, sep=''))
paste('V',i, sep='')[0]
paste('V',i, sep='')[1]
paste('V',i, sep='')[1[]]
paste('V',i, sep='')[[1]
paste('V',i, sep='')[[1]]
paste('V',i, sep='')[[1]]]
paste('V',i, sep='')[[1]]]
paste('V',i, sep='')
test<-paste('V',i, sep='')
output_pops_long$test
output_pops_long${test}
output_pops_long$(test)
output_pops_long[[test]]
tl0 <- list()
nam = paste('V',i,sep='')
tl0 + output_pops_long[[nam]]
tl0
tl0 <- rep(0,60)
tl0
tl0 + output_pops_long[[nam]]
tl0 <- rep(0,50001)
tl0 + output_pops_long[[nam]]
species$species
species$species[0]
species$species[[0]]
species$species[[1]]
species$species[[2]]
species$species[[3]]
species$species[[60]]
seq(1,60)
nam = paste('V',species$species[[i]],sep='')
nam
i
tl0 <- rep(0,50001)
tl0 <- rep(0,50001)## aggregate time series by trophic level
## aggregate time series by trophic level
tl0 <- rep(0,50001)
tl1 <- rep(0,50001)
tl2 <- rep(0,50001)
tl3 <- rep(0,50001)
for (i in seq(1,60)){
nam = paste('V',species$species[[i]],sep='')
tl = species$init_tl[[i]]
if (tl==0){tl0 + output_pops_long[[nam]]}
if (tl==1){tl1 + output_pops_long[[nam]]}
if (tl==2){tl2 + output_pops_long[[nam]]}
if (tl==3){tl3 + output_pops_long[[nam]]}
}
par(mfrow=c(1,1))
st = 0
en = 10000
plot(1:length(hi[st:en]), hi[st:en], type="n")
lines(1:length(hi[st:en]), hi[st:en])
lines(1:length(tl0[st:en]), tl0[st:en])
lines(1:length(tl0[st:en]), tl0[st:en])
plot(1:length(hi[st:en]), hi[st:en], type="n")
lines(1:length(hi[st:en]), hi[st:en])
lines(1:length(tl0[st:en]), tl0[st:en])
lines(1:length(tl1[st:en]), tl1[st:en])
tl0
tl1
tl
tl==0
tl0 <- rep(0,50001)
tl1 <- rep(0,50001)
tl2 <- rep(0,50001)
tl3 <- rep(0,50001)
for (i in seq(1,60)){
nam = paste('V',species$species[[i]],sep='')
tl = species$init_tl[[i]]
if (tl==0){tl0 = tl0 + output_pops_long[[nam]]}
if (tl==1){tl1 = tl1 + output_pops_long[[nam]]}
if (tl==2){tl2 = tl2 + output_pops_long[[nam]]}
if (tl==3){tl3 = tl3 + output_pops_long[[nam]]}
}
par(mfrow=c(1,1))
st = 0
en = 10000
plot(1:length(hi[st:en]), hi[st:en], type="n")
lines(1:length(hi[st:en]), hi[st:en])
lines(1:length(tl0[st:en]), tl0[st:en])
lines(1:length(tl1[st:en]), tl1[st:en])
st = 0
en = 10000
plot(1:length(hi[st:en]), hi[st:en], type="n", ylim=range(c(0,40000)))
lines(1:length(hi[st:en]), hi[st:en])
lines(1:length(tl0[st:en]), tl0[st:en])
lines(1:length(tl1[st:en]), tl1[st:en])
lines(1:length(tl0[st:en]), tl0[st:en], 'green')
lines(1:length(tl0[st:en]), tl0[st:en], col='green')
lines(1:length(tl1[st:en]), tl1[st:en], col='yellow')
lines(1:length(tl1[st:en]), tl2[st:en], col='blue')
lines(1:length(tl1[st:en]), tl3[st:en], col='red')
st = 0
en = 1000
plot(1:length(hi[st:en]), hi[st:en], type="n", ylim=range(c(0,40000)))
lines(1:length(hi[st:en]), hi[st:en])
lines(1:length(tl0[st:en]), tl0[st:en], col='green')
lines(1:length(tl1[st:en]), tl1[st:en], col='yellow')
lines(1:length(tl1[st:en]), tl2[st:en], col='blue')
lines(1:length(tl1[st:en]), tl3[st:en], col='red')
write.table(output, file = "tl0_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
wl = 1000
psr <- list()
adf_p <- list()
adf_s <- list()
kpss_p <- list()
kpss_s <- list()
for (t in seq(2000,50000,by=wl)){
hi_sb <- tl0[(1000):(t)];
#hi_sb <- tl1[(1000):(t)];
#hi_sb <- tl2[(1000):(t)];
#hi_sb <- tl3[(1000):(t)];
ans <- stationarity(hi_sb);
pv <- attr(ans,"pvals");
psr[[length(psr)+1]] = pv[[1]];
ans <- adf.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
adf_p[[length(adf_p)+1]] = pv[[1]];
adf_s[[length(adf_s)+1]] = st[[1]];
ans <- kpss.test(hi_sb);
pv <- ans$p.value
st <- ans$statistic
kpss_p[[length(kpss_p)+1]] = pv[[1]];
kpss_s[[length(kpss_s)+1]] = st[[1]];
}
output = cbind(seq(1000,49000,by=wl), adf_s, adf_p, kpss_s, kpss_p)
write.table(output, file = "tl0_stat_tests_v_length_hi_long.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
